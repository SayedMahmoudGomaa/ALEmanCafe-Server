<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OKButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAZCAYAAAAxFw7TAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAErUlEQVRIS62Ve0xTZxiH39pVrIgFJYqy
        4RwXYSo6rnJzcxuXTtpyk1YBkcsAQbSlhVJaWAELxRWQtohtp8JANut0YOO8BW+Lm2MXNVvMMsc0WyZE
        JUFjZELbs/d0qRNk0bn98eT7vt97znPecweCIP5XwGK1IOZ/hdkyBuPmh09A5nBj+DJcHTwLP9zseyYu
        /3oCTl/aD73ndjkgC3vOtrp+ekZLPXJeB19cMQGc+nEXdPYLYd/FLc9E25kc4GtDp/OkL4bmq5Y2ZtX5
        lCWJ5r3MFXtMq9FzAY5+3wwfXCiAtvNZz0TTCS61sMXfN1flo1X0MAel+1+/uk46r4gjcHGValkUMF1R
        ge5cLmhPZzwVTV/6tPpejnuJPkQmN0bf0JzeYGk+mfpQoA+6wJW6J0tb2Qzo+a4BWvs2wc6T658Cj7LD
        lDhH0rE6p7J7zZWm4ynjmBMk9b2s+8XqAKNcn7waDvUroOV4GqiOpsAOUxKVhJxPRtmb4Igylrg9/Izy
        COsP1WcpBOY2lL0cs0gf8VXtXi4PjF/WgMqUSpEfiGUIdCERQn1oWLUxbnZ9D4eCAInicDytvCNqlUAX
        dKDa+PY9ZS+bwNyG4jDLWrY3YmjTdm9VZVuCH3R/Xgm1xnjHbW2BCUWaZce2aJeZBLrg+KqPo2fWHGQC
        yqni9qglxa0r1ZIPI2/VfBJnxZwgwRrKIkfSqz26EkWuQdJW1nTY11dGFxkiojarl/aUd4TfR+4VapYd
        5O8ODpN2vjEDj76wUL1cUmII+kXWvcZS2f0WQSLb/yaBtdFMxeKT72xzjGXznel4lwFaDuWFFLWs0PH1
        AcPlHZFWEpzfzmvy1Rap/cPym/1ysPNLZe3h43jaBHZrQ2hYNZal9PqGJXDKiCmczmDxnSk2obIzTVas
        ee0ngT7YUqIPJWwYgi2F6qW/ZdYtOpj7vtdFvi5gtMRA1kJs8HcHmbMbvK+xhQwRytyiN9MoKASbsKEr
        /d2CxuX9+LCOFWtXEna2aP0tBS2+D7C7Mbx+f+eaFVaUDSWUuqhiihy8UDYNgUfCpgPZi3LqfcWb6l4Z
        yFP5WvKbXiXsFDT/hX2d1+hnzar3HEkSz+2KLXIIRBGNlE0UGrOpuQ1+PuurFjZn1C4aylJ6YgdexFRs
        VCx+gK/ZCfImRBfS6HbZBKHqo0zIUS6h8aoWhODG3Rvk7ncztnsQk0mreWlsnWz+10nlc9PjBU4MvHaU
        KYXKrjTIVHgCt8qNnixxZeIOp1Jl80d57y0g7HAr3cxYu5YodhElV7i6oZCCwkeyCUJFOw/S5B6QUuFK
        SZbMdU4odd6IfIvzMcwIxIqiIbZwtgpHr6TyOdS1fEf4R2HNnnXAk7lDQpkzCYUjYmAHs0pZQqefOaUM
        M1s0ewTXnbgOxDoNM2BupU+QTRBWG5IhVeIGbKGTHSoKvNdum9mInQwgx+L5jjGskll0so4jMIvptg4f
        hy1wAfx8AbSbKkGuT4SKVubj0Mo1cf5idexWHFkSLZOBGcVexxxKd8ZMgJTt6ZECDN8dhME71+Hm7YHJ
        vPD7rQEnZAbOKY/XMHuCm7evw52RQZjyV/hfmDJ8fgj4Ey3eshd3aKicAAAAAElFTkSuQmCC
</value>
  </data>
</root>